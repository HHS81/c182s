<?xml version="1.0" encoding="UTF-8"?>

<!-- ########################################

 # DR400-dauphin by PAF team
 # April 2012 : Modified by PAF team
 # http://equipe-flightgear.forumactif.com

##########################################-->

<PropertyList>

  <path>hi.ac</path>

  <!--<effect>
    <inherits-from>../Effects/c182s_interior_radiance</inherits-from>
    <object-name>fond</object-name>
    <object-name>face</object-name>
    <object-name>front</object-name>
    <object-name>HdgBug</object-name>
    <object-name>OBS-Knob</object-name>
    <object-name>clic-offset-L</object-name>
    <object-name>clic-offset-R</object-name>
    <object-name>Hdg-Knob</object-name>
    <object-name>clic-bug-L</object-name>
    <object-name>clic-bug-R</object-name>
  </effect>-->

  <animation>
    <object-name>fond</object-name>
    <object-name>face</object-name>
    <object-name>front</object-name>
    <object-name>HdgBug</object-name>
    <object-name>OBS-Knob</object-name>
    <object-name>clic-offset-L</object-name>
    <object-name>clic-offset-R</object-name>
    <object-name>Hdg-Knob</object-name>
    <object-name>clic-bug-L</object-name>
    <object-name>clic-bug-R</object-name>
  </animation>

  <animation>
    <type>material</type>
    <object-name>front</object-name>
    <object-name>HdgBug</object-name>
    <object-name>face</object-name>
    <condition>
      <not><property>sim/rendering/rembrandt/enabled</property></not>
    </condition>
  <emission>
   <red>1.0</red>
   <green>0.8</green>
   <blue>0.4</blue>
   <factor-prop>systems/electrical/outputs/instrument-lights-norm</factor-prop>
  </emission>
        <specular>
            <red>   0.0 </red>
            <green> 0.0 </green>
            <blue>  0.0 </blue>
        </specular>
        <ambient>
            <red>   1 </red>
            <green> 1 </green>
            <blue>  1 </blue>
        </ambient>
        <diffuse>
            <red>   0.3 </red>
            <green> 0.3 </green>
            <blue>  0.3 </blue>
        </diffuse>
        <shininess>
            <red>   0 </red>
            <green> 0 </green>
            <blue>  0 </blue>
        </shininess>
  </animation>

  <animation>
    <type>rotate</type>
    <object-name>face</object-name>
    <property>instrumentation/heading-indicator/indicated-heading-deg</property>
    <factor>-1</factor>
    <axis>
      <x> -1 </x>
      <y>  0 </y>
      <z>  0 </z>
    </axis>
  </animation>

  <animation>
    <type>rotate</type>
    <object-name>HdgBug</object-name>
    <property>instrumentation/heading-indicator/indicated-heading-deg</property>
    <factor>-1</factor>
    <axis>
      <x> -1 </x>
      <y>  0 </y>
      <z>  0 </z>
    </axis>
  </animation>

  <animation>
    <type>rotate</type>
    <object-name>HdgBug</object-name>
     <property>autopilot/settings/heading-bug-deg</property>
    <axis>
      <x> -1 </x>
      <y>  0 </y>
      <z>  0 </z>
    </axis>
  </animation>
  
  <animation>
    <type>rotate</type>
    <object-name>Hdg-Knob</object-name>
    <property>autopilot/settings/heading-bug-deg</property>
    <factor>10</factor>
    <center>
      <x-m>0.012891</x-m>
      <y-m>0.035372</y-m>
      <z-m>-0.033017</z-m>
    </center>
    <axis>
      <x>-0.013332</x>
      <y>0</y>
      <z>0</z>
    </axis>
  </animation>
  
  <animation>
    <type>rotate</type>
    <object-name>OBS-Knob</object-name>
    <property>instrumentation/heading-indicator/align-deg</property>
    <factor>10</factor>
    <center>
      <x-m>0.012842</x-m>
      <y-m>-0.034351</y-m>
      <z-m>-0.033017</z-m>
    </center>
    <axis>
      <x>-0.01343</x>
      <y>0</y>
      <z>0</z>
    </axis>
  </animation>
  <animation>
    <type>translate</type>
    <object-name>OBS-Knob</object-name>
    <property>instrumentation/heading-indicator/caged-flag</property>
    <factor>0.004</factor>
    <axis>
        <x>-1.0</x>
        <y>0.0</y>
        <z>0.0</z>
    </axis>
  </animation>

<!--     Heading Bug control    -->
 <animation>
  <type>knob</type>
  <object-name>Hdg-Knob</object-name>  
  <action>
    <binding>
      <command>property-adjust</command>
      <property>autopilot/settings/heading-bug-deg</property>
      <factor>1</factor>
      <min>0</min>
      <max>360</max>
      <wrap>1</wrap>
    </binding>
  </action>
  
  <!-- faster rate of change than the default -->
  <drag-scale-px>4</drag-scale-px>
  <shift-repeat type="int">5</shift-repeat>
  
  <hovered>
   <binding>
     <command>set-tooltip</command>
     <tooltip-id>heading-bug</tooltip-id>
     <mapping>heading</mapping>
     <label>Heading Bug: %3d</label>
     <property>autopilot/settings/heading-bug-deg</property>
   </binding>
  </hovered>
 </animation>

   <!--             Heading Offset             -->
   
   <animation>
    <type>knob</type>
    <object-name>OBS-Knob</object-name>  
    <action>
      <binding>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <factor>1</factor>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <command>nasal</command>
        <script><![CDATA[
            # Cage gyro when moving
            var oldSetting = getprop("instrumentation/heading-indicator/caged-flag");
            if (!oldSetting) {
              setprop("instrumentation/heading-indicator/caged-flag", 1);
              
              var rotateAction = maketimer(1.0, func {
                  setprop("instrumentation/heading-indicator/caged-flag", 0);
              });
              rotateAction.singleShot = 1;
              rotateAction.start();
            }
        ]]></script>
      </binding>
      <binding>
        <command>nasal</command>
        <script>c182s.click("heading-offset-dial")</script>
      </binding>
    </action>
    <shift-action>
      <binding>
        <condition>
          <greater-than>
            <property>sim/time/elapsed-sec</property>
            <expression>
              <sum>
                <property>instrumentation/heading-indicator/obs_last-shift-click</property>
                <value>1</value>
              </sum>
            </expression>
          </greater-than>
        </condition>
        <command>property-toggle</command>
        <property>instrumentation/heading-indicator/caged-flag</property>
      </binding>

      <binding>
        <condition>
          <less-than-equals>
            <property>sim/time/elapsed-sec</property>
            <expression>
              <sum>
                <property>instrumentation/heading-indicator/obs_last-shift-click</property>
                <value>1</value>
              </sum>
            </expression>
          </less-than-equals>
        </condition>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <factor>5</factor>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <less-than-equals>
            <property>sim/time/elapsed-sec</property>
            <expression>
              <sum>
                <property>instrumentation/heading-indicator/obs_last-shift-click</property>
                <value>1</value>
              </sum>
            </expression>
          </less-than-equals>
        </condition>
        <command>nasal</command>
        <script><![CDATA[
            # Cage gyro when moving, uncage afterwards
            setprop("instrumentation/heading-indicator/caged-flag", 1);
            
            var rotateAction = maketimer(1.0, func {
                setprop("instrumentation/heading-indicator/caged-flag", 0);
            });
            rotateAction.singleShot = 1;
            rotateAction.start();
        ]]></script>
      </binding>
      <binding>
        <command>property-assign</command>
        <property>instrumentation/heading-indicator/obs_last-shift-click</property>
        <property>sim/time/elapsed-sec</property>
      </binding>
      <binding>
        <command>nasal</command>
        <script>c182s.click("heading-offset-dial")</script>
      </binding>
    </shift-action>
  
    <!-- faster rate of change than the default -->
    <drag-scale-px>4</drag-scale-px>
    
    <hovered>
      <binding>
        <command>set-tooltip</command>
        <tooltip-id>heading-offset</tooltip-id>
        <label>%s</label>
        <property>instrumentation/heading-indicator/indicated-heading-deg</property>
        <mapping>nasal</mapping>
        <script>
          var heading = getprop("instrumentation/heading-indicator/indicated-heading-deg");
          heading = math.round(heading);
          if (heading == 0) heading = 360;
          var returnString = "Heading: " ~ sprintf("%3d", heading);
          if (getprop("instrumentation/heading-indicator/caged-flag")) {
              returnString = returnString ~ "\n(caged)";
          }
          return returnString;
        </script>
      </binding>
    </hovered>
   </animation>

  <!--     Heading Bug control    -->
  <animation>
    <type>pick</type>
    <object-name>click-bug-L</object-name>
    <visible>false</visible>
    <action>
      <name>small decrease</name>
      <button>0</button>
      <repeatable>true</repeatable>
      <binding>
        <command>property-adjust</command>
        <property>autopilot/settings/heading-bug-deg</property>
        <step>1</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>autopilot/settings/heading-bug-deg</property>
        <step>4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
    </action>
    <action>
      <name>large decrease</name>
      <button>1</button>
      <repeatable>true</repeatable>
      <binding>
        <command>property-adjust</command>
        <property>autopilot/settings/heading-bug-deg</property>
        <step>5</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
    </action>
    <action>
      <name>scrollwheel increase</name>
      <button>4</button>
      <repeatable>true</repeatable>
      <binding>
        <command>property-adjust</command>
        <property>autopilot/settings/heading-bug-deg</property>
        <step>-1</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>autopilot/settings/heading-bug-deg</property>
        <step>-4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
    </action>  
    <action>
      <name>scrollwheel decrease</name>
      <button>3</button>
      <repeatable>true</repeatable>
      <binding>
        <command>property-adjust</command>
        <property>autopilot/settings/heading-bug-deg</property>
        <step>1</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>autopilot/settings/heading-bug-deg</property>
        <step>4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
    </action>
    <hovered>
      <binding>
        <command>set-tooltip</command>
        <tooltip-id>heading-bug</tooltip-id>
        <mapping>heading</mapping>
        <label>Heading Bug: %3d</label>
        <property>autopilot/settings/heading-bug-deg</property>
      </binding>
    </hovered>
  </animation>   

  <animation>
    <type>pick</type>
    <object-name>click-bug-R</object-name>
    <visible>false</visible>
    <action>
      <name>small increase</name>
      <button>0</button>
      <repeatable>true</repeatable>
      <binding>
        <command>property-adjust</command>
        <property>autopilot/settings/heading-bug-deg</property>
        <step>-1</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>autopilot/settings/heading-bug-deg</property>
        <step>-4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
    </action>
    <action>
      <name>large increase</name>
      <button>1</button>
      <repeatable>true</repeatable>
      <binding>
        <command>property-adjust</command>
        <property>autopilot/settings/heading-bug-deg</property>
        <step>-5</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
    </action>
    <action>
      <name>scrollwheel increase</name>
      <button>4</button>
      <repeatable>true</repeatable>
      <binding>
        <command>property-adjust</command>
        <property>autopilot/settings/heading-bug-deg</property>
        <step>-1</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>autopilot/settings/heading-bug-deg</property>
        <step>-4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
    </action>  
    <action>
      <name>scrollwheel decrease</name>
      <button>3</button>
      <repeatable>true</repeatable>
      <binding>
        <command>property-adjust</command>
        <property>autopilot/settings/heading-bug-deg</property>
        <step>1</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>autopilot/settings/heading-bug-deg</property>
        <step>4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
    </action>
    <hovered>
      <binding>
        <command>set-tooltip</command>
        <tooltip-id>heading-bug</tooltip-id>
        <mapping>heading</mapping>
        <label>Heading Bug: %3d</label>
        <property>autopilot/settings/heading-bug-deg</property>
      </binding>
    </hovered>
  </animation>   

  <!--             Heading Offset             -->
  <animation>
    <type>pick</type>
    <object-name>click-offset-L</object-name>
    <visible>false</visible>
    <action>
      <name>small decrease</name>
      <button>0</button>
      <repeatable>true</repeatable>
      <binding>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>1</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <command>nasal</command>
        <script>c182s.click("heading-offset-dial")</script>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <command>nasal</command>
        <script><![CDATA[
            # Cage gyro when moving
            var oldSetting = getprop("instrumentation/heading-indicator/caged-flag");
            if (!oldSetting) {
              setprop("instrumentation/heading-indicator/caged-flag", 1);
              
              var rotateAction = maketimer(1.0, func {
                  setprop("instrumentation/heading-indicator/caged-flag", 0);
              });
              rotateAction.singleShot = 1;
              rotateAction.start();
            }
        ]]></script>
      </binding>
    </action>  
    <action>
      <name>large decrease</name>
      <button>1</button>
      <repeatable>true</repeatable>
      <binding>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>5</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <command>nasal</command>
        <script><![CDATA[
            # Cage gyro when moving
            var oldSetting = getprop("instrumentation/heading-indicator/caged-flag");
            if (!oldSetting) {
              setprop("instrumentation/heading-indicator/caged-flag", 1);
              
              var rotateAction = maketimer(1.0, func {
                  setprop("instrumentation/heading-indicator/caged-flag", 0);
              });
              rotateAction.singleShot = 1;
              rotateAction.start();
            }
        ]]></script>
      </binding>
      <binding>
        <command>nasal</command>
        <script>c182s.click("heading-offset-dial")</script>
      </binding>
    </action>
    <action>
      <name>scrollwheel increase</name>
      <button>4</button>
      <repeatable>true</repeatable>
      <binding>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>-1</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>-4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>-4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <command>nasal</command>
        <script><![CDATA[
            # Cage gyro when moving
            var oldSetting = getprop("instrumentation/heading-indicator/caged-flag");
            if (!oldSetting) {
              setprop("instrumentation/heading-indicator/caged-flag", 1);
              
              var rotateAction = maketimer(1.0, func {
                  setprop("instrumentation/heading-indicator/caged-flag", 0);
              });
              rotateAction.singleShot = 1;
              rotateAction.start();
            }
        ]]></script>
      </binding>
      <binding>
        <command>nasal</command>
        <script>c182s.click("heading-offset-dial")</script>
      </binding>
    </action>  
    <action>
      <name>scrollwheel decrease</name>
      <button>3</button>
      <repeatable>true</repeatable>
      <binding>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>1</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <command>nasal</command>
        <script><![CDATA[
            # Cage gyro when moving
            var oldSetting = getprop("instrumentation/heading-indicator/caged-flag");
            if (!oldSetting) {
              setprop("instrumentation/heading-indicator/caged-flag", 1);
              
              var rotateAction = maketimer(1.0, func {
                  setprop("instrumentation/heading-indicator/caged-flag", 0);
              });
              rotateAction.singleShot = 1;
              rotateAction.start();
            }
        ]]></script>
      </binding>
      <binding>
        <command>nasal</command>
        <script>c182s.click("heading-offset-dial")</script>
      </binding>
    </action>
    <hovered>
      <binding>
        <command>set-tooltip</command>
        <tooltip-id>heading-offset</tooltip-id>
        <label>%s</label>
        <property>instrumentation/heading-indicator/indicated-heading-deg</property>
        <mapping>nasal</mapping>
        <script>
          var heading = getprop("instrumentation/heading-indicator/indicated-heading-deg");
          heading = math.round(heading);
          if (heading == 0) heading = 360;
          var returnString = "Heading: " ~ sprintf("%3d", heading);
          if (getprop("instrumentation/heading-indicator/caged-flag")) {
              returnString = returnString ~ "\n(caged)";
          }
          return returnString;
        </script>
      </binding>
    </hovered>
  </animation>

  <animation>
    <type>pick</type>
    <object-name>click-offset-R</object-name>
    <visible>false</visible>
    <action>
      <name>small increase</name>
      <button>0</button>
      <repeatable>true</repeatable>
      <binding>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>-1</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>-4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>-4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <command>nasal</command>
        <script>c182s.click("heading-offset-dial")</script>
      </binding>
      <binding>
        <command>nasal</command>
        <script><![CDATA[
            # Cage gyro when moving
            var oldSetting = getprop("instrumentation/heading-indicator/caged-flag");
            if (!oldSetting) {
              setprop("instrumentation/heading-indicator/caged-flag", 1);
              
              var rotateAction = maketimer(1.0, func {
                  setprop("instrumentation/heading-indicator/caged-flag", 0);
              });
              rotateAction.singleShot = 1;
              rotateAction.start();
            }
        ]]></script>
      </binding>
    </action>  
    <action>
      <name>large increase</name>
      <button>1</button>
      <repeatable>true</repeatable>
      <binding>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>-5</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <command>nasal</command>
        <script>c182s.click("heading-offset-dial")</script>
      </binding>
      <binding>
        <command>nasal</command>
        <script><![CDATA[
            # Cage gyro when moving
            var oldSetting = getprop("instrumentation/heading-indicator/caged-flag");
            if (!oldSetting) {
              setprop("instrumentation/heading-indicator/caged-flag", 1);
              
              var rotateAction = maketimer(1.0, func {
                  setprop("instrumentation/heading-indicator/caged-flag", 0);
              });
              rotateAction.singleShot = 1;
              rotateAction.start();
            }
        ]]></script>
      </binding>
    </action>
    <action>
      <name>scrollwheel increase</name>
      <button>4</button>
      <repeatable>true</repeatable>
      <binding>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>-1</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>-4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>-4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <command>nasal</command>
        <script><![CDATA[
            # Cage gyro when moving
            var oldSetting = getprop("instrumentation/heading-indicator/caged-flag");
            if (!oldSetting) {
              setprop("instrumentation/heading-indicator/caged-flag", 1);
              
              var rotateAction = maketimer(1.0, func {
                  setprop("instrumentation/heading-indicator/caged-flag", 0);
              });
              rotateAction.singleShot = 1;
              rotateAction.start();
            }
        ]]></script>
      </binding>
      <binding>
        <command>nasal</command>
        <script>c182s.click("heading-offset-dial")</script>
      </binding>
    </action>  
    <action>
      <name>scrollwheel decrease</name>
      <button>3</button>
      <repeatable>true</repeatable>
      <binding>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>1</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <condition>
          <property>devices/status/keyboard/shift</property>
        </condition>
        <command>property-adjust</command>
        <property>instrumentation/heading-indicator/align-deg</property>
        <step>4</step>
        <min>0</min>
        <max>360</max>
        <wrap>1</wrap>
      </binding>
      <binding>
        <command>nasal</command>
        <script><![CDATA[
            # Cage gyro when moving
            var oldSetting = getprop("instrumentation/heading-indicator/caged-flag");
            if (!oldSetting) {
              setprop("instrumentation/heading-indicator/caged-flag", 1);
              
              var rotateAction = maketimer(1.0, func {
                  setprop("instrumentation/heading-indicator/caged-flag", 0);
              });
              rotateAction.singleShot = 1;
              rotateAction.start();
            }
        ]]></script>
      </binding>
      <binding>
        <command>nasal</command>
        <script>c182s.click("heading-offset-dial")</script>
      </binding>
    </action>
    <hovered>
      <binding>
        <command>set-tooltip</command>
        <tooltip-id>heading-offset</tooltip-id>
        <label>%s</label>
        <property>instrumentation/heading-indicator/indicated-heading-deg</property>
        <mapping>nasal</mapping>
        <script>
          var heading = getprop("instrumentation/heading-indicator/indicated-heading-deg");
          heading = math.round(heading);
          if (heading == 0) heading = 360;
          var returnString = "Heading: " ~ sprintf("%3d", heading);
          if (getprop("instrumentation/heading-indicator/caged-flag")) {
              returnString = returnString ~ "\n(caged)";
          }
          return returnString;
        </script>
      </binding>
    </hovered>
  </animation>
  
  <!-- TEXT OSG -->
  <text>
    <name>textosg</name>
    <type type="string">literal</type>
    <text type="string">Heading Indicator</text>
    <draw-text type="bool">true</draw-text>
    <font>Helvetica.txf</font>
    <character-size type="double">0.014</character-size>
    <character-aspect-ratio type="double">1.0</character-aspect-ratio>
    <axis-alignment>yz-plane</axis-alignment>
    <max-height>0.06</max-height>
    <max-width>0.05</max-width>
    <font-resolution>
      <width type="int">64</width>
      <height type="int">64</height>
    </font-resolution>
    <alignment>center-center</alignment>
    <offsets>
      <x-m>  0.005 </x-m>
      <y-m>  0.000 </y-m>
      <z-m>  0.000 </z-m>
    </offsets>
  </text>

  <animation>
    <type>material</type>
    <object-name>textosg</object-name>
    <emission>
      <red>   0.8 </red>
      <green> 0.8 </green>
      <blue>  0.0 </blue>
    </emission>
  </animation>

  <animation>
    <type>select</type>
    <object-name>textosg</object-name>
    <condition>
      <property>sim/panel-hotspots</property>
    </condition>
  </animation>
  
</PropertyList>


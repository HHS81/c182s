<?xml version="1.0"?>
<!-- based on  HAL V. Engel's p51d, tuning by Heiko H. Schulz; oil managament additions made by Benedikt Hallinger 2017/ 2018 -->

<system name="Propulsion">
    
    <!-- for debugging/fooling around: manual added engine friction -->
    <property type="double" value="0">systems/propulsion/manual-friction</property>
    <property type="double" value="0">ice/propeller</property>

    
    <channel name="engine power">
        <fcs_function name="systems/engine/MP-alt-volumetric-efficiency-curve">
          <function>
                <table>
                    <independentVar lookup="row">atmosphere/density-altitude</independentVar>
                    <independentVar lookup="column">propulsion/engine/map-inhg</independentVar>
                    <tableData breakPoint="0">
			14 	15	16	17	18	19	20	21	22	23	24	25	26	27	28	28.5
		0	0.15	 0.85 0.85	0.85 	0.85 0.85 0.85 0.85 0.92 0.87 0.865 0.855 0.855 0.855 0.945 1.045 
		2000	0.15	0.86 0.86 0.86 0.86 0.86 0.86 0.86 0.86 0.85 0.85 0.86 0.86 0.965 1.065 1.065   
		4000	0.15 0.87 0.87 0.87 0.87 0.870.87 0.87 0.87 0.87 0.87  0.87 0.87 1.080 1.080 1.080
		6000	0.15 0.83	0.83	0.83	0.83	0.83	 0.83 0.83 0.84 0.85 0.86 1.08 1.080 1.080 1.078 1.080	  
		8000	0.15 0.83	0.83	0.83	0.83	0.83	 0.835 0.835  0.80 0.80  0.90	0.90 	0.90 0.90	0.90	0.90	
		10000 0.20 0.840	0.840	0.840	0.840	0.835	0.835	0.77	0.77	0.87 0.87	0.87  0.87 0.87 0.87 0.87   
		12000 0.22 0.82 0.83 0.835 0.85 0.79 0.79  0.79 0.79 0.89 0.89 0.89	0.89  0.89 0.89 0.89 
		14000 0.25 0.84 0.835 0.84 0.77 0.77 0.77 0.77 0.87 0.87 0.87 0.87 0.87  0.87 0.87 0.87 
                   </tableData> 
                </table>
          </function>
          <output>propulsion/engine/volumetric-efficiency</output>   
        </fcs_function>
        
        
	


        <!-- Power based on fuel flow -->
        <fcs_function name="systems/engine/MP-alt-bsfc-lbs_hphr-curve">
          <function>
            <table>
                <independentVar lookup="row">atmosphere/density-altitude</independentVar>
                <independentVar lookup="column">propulsion/engine/fuel-flow-rate-gph</independentVar>
                <tableData breakPoint="0">
                             8.0      9.0     13.5    14.5    15.5    16.5    17.5    19.0    20.5    21.5
                    0        0.360    0.360    0.36    0.415   0.425   0.425   0.437   0.455   0.475   0.53
                    2000     0.355    0.355    0.355   0.415   0.425   0.425   0.457   0.475   0.53    0.53
                    4000     0.355    0.355    0.420   0.415   0.425   0.425   0.437   0.53    0.53    0.53
                    6000     0.345    0.355    0.367   0.415   0.425   0.425   0.53    0.53    0.53    0.53
                    8000     0.345    0.360    0.360   0.415   0.425   0.425   0.53    0.53    0.53    0.53
                    10000    0.370    0.310    0.415   0.415   0.437   0.53    0.53    0.53    0.53    0.53
                    12000    0.395    0.335    0.415   0.435   0.53    0.53    0.53    0.53    0.53    0.53
                    14000    0.360    0.332    0.445   0.53    0.53    0.53    0.53    0.53    0.53    0.53
                </tableData>
            </table>
          </function>
          <clipto>
             <min> 0.0 </min>
             <max> 1.00 </max>
           </clipto>
        </fcs_function>
        
        <!-- Adjust bsfc for power-loss factors (the higher the value, the less power per unit of fuel) -->
        <fcs_function name="systems/engine/BSFC">
          <function>
              <product>
                  <property>systems/engine/MP-alt-bsfc-lbs_hphr-curve</property>
                  <table>
                    <independentVar>systems/engine/power-reduction-pct</independentVar>
                    <tableData>
                        0.00  1.00
                        0.50  1.60
                        0.75  3.20
                        1.0   5.00
                    </tableData>
                </table>
              </product>
          </function>
          <clipto>
             <min> 0.0001 </min> <!-- <=0 breaks the fdm! -->
             <max> 9999.0 </max> <!-- for proper syntax only, already limited by table data product -->
           </clipto>
           <output>propulsion/engine/bsfc-lbs_hphr</output>   <!-- consumed by jsbsim -->
        </fcs_function>
        
	
        <fcs_function name="systems/engine/RAM-Air-Factor">
          <function>
                <table>
                    <independentVar lookup="row">atmosphere/density-altitude</independentVar>
                    <tableData breakPoint="0">
					
                        0		0.1		
                        2000	0.2		
                        4000	0.3		
                        6000	0.6		
                        8000	0.9		
                        10000	0.99		 
                        12000	0.99	
                        14000	0.99	
                   </tableData>
                </table>  
          </function>
          <clipto>
             <min> 0.0 </min>
             <max> 1.00 </max>
           </clipto>
          <output>propulsion/engine/ram-air-factor</output>   
        </fcs_function>
	
        
        
        <!-- Hooks for dynamic power reduction -->
        <summer name="systems/engine/power-reduction-pct">
            <input>/engines/engine/manual-power-reduction-pct</input>   <!-- for fun with telnet, etc -->
            <input>/engines/engine/roughness-rpm-reduction-pct</input>  <!-- see engine.xml -->
            
            <output>systems/engine/power-reduction-pct</output>
            <clipto>
                <min> 0.0 </min>
                <max> 1.0 </max>
            </clipto>
        </summer>
        
        
        <!-- Air impedance is fixed at 0.18; but adjusted for effects.
            Power reduction is with a quick response implemented here,
            however this is hacky as it is mixture dependent and MP pressure follows too.
        -->
        <!-- original base value from engIO540AB1A5.xml-->
        <!--<fcs_function name="systems/engine/Air-Intake-Impedance-Factor">
            <function>
                <sum>
                    <value>0.18</value>
                    
                    <table>
                        <independentVar lookup="row">systems/engine/power-reduction-pct</independentVar>
                        <tableData>
                            0.00   0.00
                            0.10   0.35
                            0.20   0.55
                            0.30   1.54
                            0.40   2.03
                            0.50   2.70
                            0.60   3.65
                            0.70   4.70
                            0.80   5.55
                            0.90   7.30
                            1.00  15.00
                        </tableData>
                    </table>
                </sum>
            </function>
            <output>propulsion/engine/air-intake-impedance-factor</output>   
        </fcs_function>-->
	
    </channel>


<channel name="Engine temperature">
    <summer name="Engine Oil compensated environment Temperature">
        <input>/engines/engine/oil-temperature-degf</input>
        <input>-/engines/engine/oil-temperature-env-diff</input>
        <input>/engines/engine/oil-temperature-degf-offset</input>  <!-- to give some warm oil with engine running states at sim start (takeoff, cruise), see c182s-states.nas -->
        <output>/engines/engine/oil-compensated-temperature-degf</output>
    </summer>
    <summer name="CHT compensated environment Temperature">
        <input>/engines/engine/cht-degf</input>
        <input>-/engines/engine/cht-temperature-env-diff</input>
        <input>/engines/engine/cht-temperature-degf-offset</input>   <!-- to give some warm cylinder with engine running states at sim start (takeoff, cruise), see c182s-states.nas -->
        <output>/engines/engine/cht-compensated-temperature-degf</output>
    </summer>
    
    <summer name="Oil temp plus external heat">
        <input>/engines/engine/oil-temperature-degf-indicated</input>
        <input>/engines/engine/external-heat/applied-degF</input>
        <output>/engines/engine/oil-final-temperature-degf</output>
    </summer>

    <summer name="CHT temp plus external heat">
        <input>/engines/engine/cht-compensated-temperature-degf</input>
        <input>/engines/engine/external-heat/applied-degF</input>
        <output>/engines/engine/cht-final-temperature-degf</output>
    </summer>
</channel>


<channel name= "Prop Icing">
<fcs_function name="systems/propulsion/prop-ice">
          <function>
                <table>
                    <independentVar lookup="row">ice/propeller</independentVar>
                    <tableData breakPoint="0">
                        0   1		
                        1   0
                </tableData>
                </table>  
          </function>
          <output>propulsion/engine/prop-ice-factor</output>   
        </fcs_function>
 </channel>


 <channel name="Propeller Governor">
    <fcs_function name="systems/propulsion/prop-governor">
        <function>
            <product>
                <property>propulsion/engine/prop-ice-factor</property>   <!-- faking ice effect on propeller drag -->
                
                <!-- Lever command position, based on fail-forward for low governor oil press -->
                <max>
                    <difference>
                        <value>1</value>
                        <property>/engines/engine[0]/governor/oil-pressure-norm</property>
                    </difference>
                    <property>fcs/advance-cmd-norm</property> <!-- lever positional input: 1=full in/high RPM -->
                </max>
                
            </product>
        </function>
        <output>fcs/advance-pos-norm</output> 
    </fcs_function>
 </channel>
 

<channel name="sparkPlugs" execrate="8">
    <!-- Calculates an approximated spark plug temperature.
         NOTE: this is currently not based on real data but a guess.
         EGT is a proxy for the combustion temperature. At stochiometric mixture (AFR 13.9) it is about 1560°F, maxPWR~1400°F.
         We however add a bit temperature boost ~50°F LoP because of better combustion, afterwards the cooling effect of excessive air overtakes.
    -->
    <fcs_function name="systems/propulsion/sparkplugs/temperature-degf-tgt">
        <description>Simulates combustion temperature</description>
        <function>
            <sum>
                <product>
                    <property>/engines/engine/running</property>
                    
                    <property>/engines/engine/egt-degf</property>
                    <table>
                        <independentVar>propulsion/engine/engine-rpm</independentVar>
                        <tableData>
                             700   0.20
                             900   0.35
                            2400   0.60
                        </tableData>
                    </table>
                    <table>
                        <independentVar>propulsion/engine/AFR</independentVar>
                        <tableData>
                             13.90  1.0
                             14.45  1.12
                             15.50  1.0
                        </tableData>
                    </table>
                </product>
                
                <product>
                    <not><property>/engines/engine/running</property></not>
                    <property>/engines/engine/oil-final-temperature-degf</property>
                </product>
            </sum>
        </function>
    </fcs_function>
    <fcs_function name="/fdm/jsbsim/systems/propulsion/sparkplugs/temperature-degf-tgt-ratelimit">
        <!-- damping the initial heating at the start to give the icing implementation a chance to catch on -->
        <function>
            <table>
                <independentVar>/engines/engine/sparkplugs-temperature-degf</independentVar>
                <tableData>
                    32   2.00
                    100  20.00
                    200  50.00
                </tableData>
            </table>
        </function>
    </fcs_function>
    <actuator name="/engines/engine/sparkplugs-temperature-degf">
        <input> /fdm/jsbsim/systems/propulsion/sparkplugs/temperature-degf-tgt </input>
        <rate_limit> /fdm/jsbsim/systems/propulsion/sparkplugs/temperature-degf-tgt-ratelimit </rate_limit>
    </actuator>
    
    
    <!-- Booleans to see which magneto is selected -->
    <switch name="systems/propulsion/sparkplugs/right/magneto-selected">
        <default value="0"/>
        <test logic="OR" value="1">
            /controls/engines/engine/magnetos EQ 1
            /controls/engines/engine/magnetos EQ 3
        </test>
    </switch>
    <switch name="systems/propulsion/sparkplugs/left/magneto-selected">
        <default value="0"/>
        <test logic="OR" value="1">
            /controls/engines/engine/magnetos EQ 2
            /controls/engines/engine/magnetos EQ 3
        </test>
    </switch>
    
    <!-- Left Spark plug fouling -->
    <!-- The following switches calculate the fouling conditions -->
    <switch name="systems/propulsion/sparkplugs/left/carbon-fouling">
        <!-- Carbon fouling occurs with overly rich mixture.
             AFR:  8=no combustion; <8.15 severe RPM loss; <12=rich; ~12.0 is MaxPWR; 13.9 is Peak ~EGT; > 13.9=LoP; ~18.9 engine cutoff-->
        <default value="0"/>
        <test logic="AND" value="1">
            /engines/engine/running  EQ 1
            propulsion/engine/AFR    LT 11.0
        </test>
        <test logic="AND" value="-1">
            /engines/engine/running    EQ 1
            propulsion/engine/AFR GT   11.5
        </test>
    </switch>
    <switch name="systems/propulsion/sparkplugs/left/lead-fouling">
        <!-- Lead fouling occurs when the combustion temperature is not hot enough to activate
             the EDB lead scavenge agent (temps < 264°C/507.2°F). -->
        <default value="0"/>
        <test logic="AND" value="1">
            /engines/engine/running                     EQ 1
            /engines/engine/sparkplugs-temperature-degf LT 507.2 
        </test>
        <test logic="AND" value="-1">
            /engines/engine/running                     EQ 1
            /engines/engine/sparkplugs-temperature-degf GT 507.2
        </test>
    </switch>
    <switch name="systems/propulsion/sparkplugs/left/disabled-fouling">
        <!-- The plug is not running but supplied with fuel. This will slowly foul (running on one magneto). -->
        <!-- It will be removed if the plug is firing again in "cleaning" conditions. -->
        <default value="0"/>
        <test logic="AND" value="1">
            <test logic="OR">
                /engines/engine/running           EQ 1
                /engines/engine/cranking          EQ 1
            </test>
            systems/propulsion/sparkplugs/left/magneto-selected EQ 0
        </test>
    </switch>
    
    <!-- This switch calculates the final decision if we should clean/foul the plugs -->
    <switch name="systems/propulsion/sparkplugs/left/fouling-change">
        <default value="0"/>
        <test logic="AND" value="0">
            <!-- Do not change the value if simulation is not activated -->
            /engines/engine/allow-sparkplug-icing EQ 0
        </test>
        <test logic="OR" value="1">
            systems/propulsion/sparkplugs/left/carbon-fouling   GT 0
            systems/propulsion/sparkplugs/left/lead-fouling     GT 0
            systems/propulsion/sparkplugs/left/disabled-fouling GT 0
        </test>
        <test logic="AND" value="-1">
            systems/propulsion/sparkplugs/left/carbon-fouling LT 0
            systems/propulsion/sparkplugs/left/lead-fouling   LE 0
        </test>
        <test logic="AND" value="-1">
            systems/propulsion/sparkplugs/left/carbon-fouling LE 0
            systems/propulsion/sparkplugs/left/lead-fouling   LT 0
        </test>
    </switch>
    
    <!-- Calculate decrease/stable/increase of plugs foul state
         (the switch has three states: 0=stable; -1/+1=clean/foul;
          and the increase/decrease rate is dynamic. Finally, the
          actuator represents the current fouling-state in percent -->
    <switch name="systems/propulsion/sparkplugs/left/fouling-tgt">
        <default value="systems/propulsion/sparkplugs/left/fouling-norm"/>
        <test logic="AND" value="0.0">
            /fdm/jsbsim/damage/repairing EQ 1
        </test>
        <test logic="AND" value="systems/propulsion/sparkplugs/left/fouling-savedrestore">
            /sim/time/elapsed-sec        LT 0.1
        </test>
        <test logic="AND" value="1.0"> <!-- Flooded engine makes plugs wet/fouled -->
            /engines/engine/running      EQ 0
            /systems/fuel/engine-flooded EQ 1
        </test>
        <test logic="AND" value="1.0">
            /engines/engine/running EQ 1
            systems/propulsion/sparkplugs/left/fouling-change GT 0
        </test>
        <test logic="AND" value="0.0">
            /engines/engine/running EQ 1
            systems/propulsion/sparkplugs/left/fouling-change LT 0
        </test>
    </switch>
    <switch name="systems/propulsion/sparkplugs/left/fouling-norm-ratelimit-swtch">
        <default value="0"/>
        <test logic="OR" value="999"> <!-- insta repair/restore -->
            /fdm/jsbsim/damage/repairing EQ 1
            /sim/time/elapsed-sec        LT 0.1
        </test>
        <test logic="AND" value="0.50"> <!-- Flooded engine makes plugs fouled -->
            /engines/engine/running      EQ 0
            /systems/fuel/engine-flooded EQ 1
        </test>
        <test logic="AND" value="0.00166"> <!-- ~10min=600s to fully develop -->
            systems/propulsion/sparkplugs/left/fouling-change GT 0
        </test>
        <test logic="AND" value="0.0005"> <!-- long to fully remedy with just above temps and lead fouling -->
            systems/propulsion/sparkplugs/temperature-degf-tgt LT 730.0
            systems/propulsion/sparkplugs/left/fouling-change  LT 0
            systems/propulsion/sparkplugs/left/lead-fouling    LE 0
        </test>
        <test logic="AND" value="0.0008"> <!-- long to fully remedy with just above temps and lead fouling -->
            systems/propulsion/sparkplugs/temperature-degf-tgt LT 650.0
            systems/propulsion/sparkplugs/left/fouling-change  LT 0
            systems/propulsion/sparkplugs/left/lead-fouling    LE 0
        </test>
        <test logic="AND" value="0.033"> <!-- ~30s to fully remedy -->
            systems/propulsion/sparkplugs/left/fouling-change LT 0
        </test>
    </switch>
    <switch name="systems/propulsion/sparkplugs/left/affected-switch">
        <default value="systems/propulsion/sparkplugs/left/affected" />
        <test logic="OR" value="1">  <!-- always affected if flooded, repairing or restoring -->
            /systems/fuel/engine-flooded   EQ 1
            /fdm/jsbsim/damage/repairing   EQ 1
            /sim/time/elapsed-sec          LT 0.1
        </test>
        <test logic="AND" value="1">  <!-- always affected if cleaning and not affected otherwise -->
            systems/propulsion/sparkplugs/left/affected        EQ 0
            systems/propulsion/sparkplugs/left/fouling-change  LT 0
        </test>
    </switch>
    <fcs_function name="systems/propulsion/sparkplugs/left/fouling-norm-ratelimit">
        <function>
            <product>
                <property>systems/propulsion/sparkplugs/left/fouling-norm-ratelimit-swtch</property>
                <property>systems/propulsion/sparkplugs/left/affected-switch</property>
            </product>
        </function>
    </fcs_function>
    <actuator name="systems/propulsion/sparkplugs/left/fouling-norm">
        <input> systems/propulsion/sparkplugs/left/fouling-tgt </input>
        <rate_limit>systems/propulsion/sparkplugs/left/fouling-norm-ratelimit</rate_limit> <!-- rate_limit defines change per second -->
        <clipto>
            <min> 0.00 </min>
            <max> 1.00 </max>
        </clipto>
        <output>systems/propulsion/sparkplugs/left/fouling-savedrestore</output>
    </actuator>
    
    
    <!-- Right Spark plug fouling -->
    <!-- The following switches calculate the fouling conditions -->
    <switch name="systems/propulsion/sparkplugs/right/carbon-fouling">
        <!-- Carbon fouling occurs with overly rich mixture.
             AFR:  8=no combustion; <8.15 severe RPM loss; <12=rich; ~12.0 is MaxPWR; 13.9 is Peak ~EGT; > 13.9=LoP; ~18.9 engine cutoff-->
        <default value="0"/>
        <test logic="AND" value="1">
            /engines/engine/running  EQ 1
            propulsion/engine/AFR    LT 11.0
        </test>
        <test logic="AND" value="-1">
            /engines/engine/running    EQ 1
            propulsion/engine/AFR GT   11.5
        </test>
    </switch>
    <switch name="systems/propulsion/sparkplugs/right/lead-fouling">
        <!-- Lead fouling occurs when the combustion temperature is not hot enough to activate
             the EDB lead scavenge agent (temps < 264°C/507°F). -->
        <default value="0"/>
        <test logic="AND" value="1">
            /engines/engine/running                     EQ 1
            /engines/engine/sparkplugs-temperature-degf LT 507.2
        </test>
        <test logic="AND" value="-1">
            /engines/engine/running                     EQ 1
            /engines/engine/sparkplugs-temperature-degf GT 507.2
        </test>
    </switch>
    <switch name="systems/propulsion/sparkplugs/right/disabled-fouling">
        <!-- The plug is not running but supplied with fuel. This will slowly foul (running on one magneto). -->
        <!-- It will be removed if the plug is firing again in "cleaning" conditions. -->
        <default value="0"/>
        <test logic="AND" value="1">
            <test logic="OR">
                /engines/engine/running           EQ 1
                /engines/engine/cranking          EQ 1
            </test>
            systems/propulsion/sparkplugs/right/magneto-selected EQ 0
        </test>
    </switch>
    
    <!-- This switch calculates the final decision if we should clean/foul the plugs -->
    <switch name="systems/propulsion/sparkplugs/right/fouling-change">
        <default value="0"/>
        <test logic="AND" value="0">
            <!-- Do not change the value if simulation is not activated -->
            /engines/engine/allow-sparkplug-icing EQ 0
        </test>
        <test logic="OR" value="1">
            systems/propulsion/sparkplugs/right/carbon-fouling   GT 0
            systems/propulsion/sparkplugs/right/lead-fouling     GT 0
            systems/propulsion/sparkplugs/right/disabled-fouling GT 0
        </test>
        <test logic="AND" value="-1">
            systems/propulsion/sparkplugs/right/carbon-fouling LT 0
            systems/propulsion/sparkplugs/right/lead-fouling   LE 0
        </test>
        <test logic="AND" value="-1">
            systems/propulsion/sparkplugs/right/carbon-fouling LE 0
            systems/propulsion/sparkplugs/right/lead-fouling   LT 0
        </test>
    </switch>
    
    <!-- Calculate decrease/stable/increase of plugs foul state
         (the switch has three states: 0=stable; -1/+1=clean/foul;
          and the increase/decrease rate is dynamic. Finally, the
          actuator represents the current fouling-state in percent -->
    <switch name="systems/propulsion/sparkplugs/right/fouling-tgt">
        <default value="systems/propulsion/sparkplugs/right/fouling-norm"/>
        <test logic="AND" value="0.0">
            /fdm/jsbsim/damage/repairing EQ 1
        </test>
        <test logic="AND" value="systems/propulsion/sparkplugs/right/fouling-savedrestore">
            /sim/time/elapsed-sec        LT 0.1
        </test>
        <test logic="AND" value="1.0"> <!-- Flooded engine makes plugs wet/fouled -->
            /engines/engine/running      EQ 0
            /systems/fuel/engine-flooded EQ 1
        </test>
        <test logic="AND" value="1.0">
            /engines/engine/running EQ 1
            systems/propulsion/sparkplugs/right/fouling-change GT 0
        </test>
        <test logic="AND" value="0.0">
            /engines/engine/running EQ 1
            systems/propulsion/sparkplugs/right/fouling-change LT 0
        </test>
    </switch>
    <switch name="systems/propulsion/sparkplugs/right/fouling-norm-ratelimit-swtch">
        <default value="0"/>
        <test logic="OR" value="999"> <!-- insta repair/restore -->
            /fdm/jsbsim/damage/repairing EQ 1
            /sim/time/elapsed-sec        LT 0.1
        </test>
        <test logic="AND" value="0.50"> <!-- Flooded engine makes plugs fouled -->
            /engines/engine/running      EQ 0
            /systems/fuel/engine-flooded EQ 1
        </test>
        <test logic="AND" value="0.00166"> <!-- ~10min=600s to fully develop -->
            systems/propulsion/sparkplugs/right/fouling-change GT 0
        </test>
        <test logic="AND" value="0.0005"> <!-- long to fully remedy with just above temps and lead fouling -->
            systems/propulsion/sparkplugs/temperature-degf-tgt  LT 650.0
            systems/propulsion/sparkplugs/right/fouling-change  LT 0
            systems/propulsion/sparkplugs/right/lead-fouling    LE 0
        </test>
        <test logic="AND" value="0.0008"> <!-- long to fully remedy with just above temps and lead fouling -->
            systems/propulsion/sparkplugs/temperature-degf-tgt  LT 730.0
            systems/propulsion/sparkplugs/right/fouling-change  LT 0
            systems/propulsion/sparkplugs/right/lead-fouling    LE 0
        </test>
        <test logic="AND" value="0.033"> <!-- ~30s to fully remedy -->
            systems/propulsion/sparkplugs/right/fouling-change LT 0
        </test>
    </switch>
    <switch name="systems/propulsion/sparkplugs/right/affected-switch">
        <default value="systems/propulsion/sparkplugs/right/affected" />
        <test logic="OR" value="1">  <!-- always affected if flooded, repairing or restoring -->
            /systems/fuel/engine-flooded   EQ 1
            /fdm/jsbsim/damage/repairing   EQ 1
            /sim/time/elapsed-sec          LT 0.1
        </test>
        <test logic="AND" value="1">  <!-- always affected if cleaning and not affected otherwise -->
            systems/propulsion/sparkplugs/right/affected        EQ 0
            systems/propulsion/sparkplugs/right/fouling-change  LT 0
        </test>
    </switch>
    <fcs_function name="systems/propulsion/sparkplugs/right/fouling-norm-ratelimit">
        <function>
            <product>
                <property>systems/propulsion/sparkplugs/right/fouling-norm-ratelimit-swtch</property>
                <property>systems/propulsion/sparkplugs/right/affected-switch</property>
            </product>
        </function>
    </fcs_function>
    <actuator name="systems/propulsion/sparkplugs/right/fouling-norm">
        <input> systems/propulsion/sparkplugs/right/fouling-tgt </input>
        <rate_limit>systems/propulsion/sparkplugs/right/fouling-norm-ratelimit</rate_limit> <!-- rate_limit defines change per second -->
        <clipto>
            <min> 0.00 </min>
            <max> 1.00 </max>
        </clipto>
        <output>systems/propulsion/sparkplugs/right/fouling-savedrestore</output>
    </actuator>


    <!-- Calculate engine roughness factor
         This is based on the fouling state, the magneto settings and also RPM.
    NOTE: Fyling on BOTH should be better than on the good mag alone, unless the
         engine runs rough in BOTH. This (probably?) happens, when the bad magneto hinders the good one
         more than the good one can overcome; so switching to the better one in this case gives more power
         and a less rough engine.
    -->
    <fcs_function name="systems/propulsion/sparkplugs/fouling-roughness-factor">
        <description>made up data for spark plug fouling power loss/engine roughness </description>
        <function>
            <product>
                <!-- Only add roughness if extended simulation is switched on -->
                <property>/engines/engine/complex-engine-procedures</property>
                <property>/engines/engine/allow-sparkplug-icing</property>
                
                <sum>
                    <!-- LEFT magneto selected -->
                    <product>
                        <property>systems/propulsion/sparkplugs/left/magneto-selected</property>
                        <not><property>systems/propulsion/sparkplugs/right/magneto-selected</property></not>
                        
                        <table>
                            <independentVar>systems/propulsion/sparkplugs/left/fouling-norm</independentVar>
                            <tableData>
                                0.00   0.00
                                0.33   0.00
                                1.00   1.00
                            </tableData>
                        </table>
                    </product>
                    
                    <!-- RIGHT magneto selected -->
                    <product>
                        <not><property>systems/propulsion/sparkplugs/left/magneto-selected</property></not>
                        <property>systems/propulsion/sparkplugs/right/magneto-selected</property>
                        
                        <table>
                            <independentVar>systems/propulsion/sparkplugs/right/fouling-norm</independentVar>
                            <tableData>
                                0.00   0.00
                                0.33   0.00
                                1.00   1.00
                            </tableData>
                        </table>
                    </product>
                    
                    <!-- BOTH magnetos selected -->
                    <product>
                        <property>systems/propulsion/sparkplugs/left/magneto-selected</property>
                        <property>systems/propulsion/sparkplugs/right/magneto-selected</property>
                        
                        <table>
                            <independentVar lookup="row">systems/propulsion/sparkplugs/left/fouling-norm</independentVar>
                            <independentVar lookup="column">systems/propulsion/sparkplugs/right/fouling-norm</independentVar>
                            <tableData>
                                      0.00   0.30   1.00
                                0.00  0      0      0.30
                                0.30  0      0      0.45
                                1.00  0.30   0.45   0.60
                            </tableData>
                        </table>
                    </product>
                </sum>
                
                <table>
                    <independentVar>propulsion/engine/engine-rpm</independentVar>
                    <tableData>
                        1300  0.00
                        1700  0.75
                        2400  1.00
                    </tableData>
                </table>
            </product>
            
        </function>
    </fcs_function>

</channel>
    
    <!-- Engine friction depending on Oil parameters
         with credits and many thanks to Ron Jensen: https://sourceforge.net/p/jsbsim/mailman/message/30264774/
         The friction depends on oil viscosity (temperature) and CHT.
         Added friction will also raise CHT and thus oil temps.
    
         The overall system works in two stages:
           1.  several sources add friction independently
           2.  the souces are summed up end can eventually kill the engine
           2a. a "special" source is caused by a flip-flop that monitors friction itself; if friction exceeds a limit
               for a defined amount of time, additional friction is applied that will kill the engine.
            
    -->
    <channel name="Engine Friction" execrate="8">
        <fcs_function name="systems/propulsion/expansion-friction">
            <description>made up data to simulate too hot CHT causing friction</description>
            <function>
                <!-- Only apply if this test is TRUE, otherwise interference with autostart and other things -->
                <product>
                    <property>/engines/engine/complex-engine-procedures</property>  <!-- complex-engine-procedures EQ 1 -->
                
                    <table>
                        <independentVar>propulsion/engine/cht-degF</independentVar>
                        <tableData>
                            200.0    0.0
                            500.0    0.0
                            550.0    1.0   <!-- clinders running really too hot! -->
                            650.0   30.0   <!-- stress on CHT -->
                        </tableData>
                    </table>
                </product>
            </function>
        </fcs_function>

        <fcs_function name="systems/propulsion/oil-age-friction">
            <description>made up data for engine oil age affecting viscosity </description>
            <function>
                <!-- Only apply if this test is TRUE, otherwise interference with autostart and other things -->
                <product>
                    <property>/engines/engine/complex-engine-procedures</property>  <!-- complex-engine-procedures EQ 1 -->
                    <property>/engines/engine/allow-oil-management</property>       <!-- allow-oil-management EQ 1 -->
                
                    <table>
                        <independentVar>/engines/engine[0]/oil-service-hours</independentVar>
                        <tableData>
                            65       0.0
                            100     10.0
                        </tableData>
                    </table>
                    
                    <!-- apply friction gradually depending on engine RPM, with no effect in low RPM -->
                    <table>
                        <independentVar>propulsion/engine/engine-rpm</independentVar>
                        <tableData>
                            800   0.0
                            1200  1.0
                        </tableData>
                    </table>
                    
                </product>
            </function>
        </fcs_function>
        
        <fcs_function name="systems/propulsion/oil-temp-friction">
            <description>made up data for engine oil temperature affecting friction </description>
            <function>
                <!-- Only apply if this test is TRUE, otherwise interference with autostart and other things -->
                <product>
                    <property>/engines/engine/complex-engine-procedures</property>  <!-- complex-engine-procedures EQ 1 -->
                    <property>/engines/engine/allow-oil-management</property>       <!-- allow-oil-management EQ 1 -->
                    <!--<property>/engines/engine/running</property>--> <!-- only apply with pistons moving -->
                
                    <table>
                        <!--<independentVar>propulsion/engine/oil-temperature-degF</independentVar>-->
                        <independentVar>/engines/engine/oil-final-temperature-degf</independentVar>
                        <tableData>
                            75.0     0.0   <!--  32°C --> <!-- engine is considered "warm" -->
                            255.0    0.0   <!--  93°C --> <!-- engine is starting to overheat -->
                            275.0   10.0
                            300.0   30.0                  <!-- oil is too hot and oil film will rip -->
                        </tableData>
                    </table>
                    
                    <!-- apply friction gradually depending on engine RPM, with no effect in low RPM -->
                    <table>
                        <independentVar>propulsion/engine/engine-rpm</independentVar>
                        <tableData>
                            1000  0.0
                            1400  1.0
                        </tableData>
                    </table>
                    
                </product>
            </function>
        </fcs_function>
        
        <fcs_function name="systems/propulsion/oil-viscosity-friction">
            <description> oil friction due to viscosity </description>
            <function>
                <product>
                    <!-- Only apply if this test is TRUE, otherwise interference with autostart and other things -->
                    <property>/engines/engine/complex-engine-procedures</property>  <!-- complex-engine-procedures EQ 1 -->
                    <property>/engines/engine/allow-oil-management</property>       <!-- allow-oil-management EQ 1 -->
                    <!--<property>/engines/engine/running</property>--> <!-- only apply with pistons moving -->
                
                    <table>
                        <independentVar>/engines/engine[0]/oil-kinematic-viscosity</independentVar>
                        <tableData>
                            150     0.0   <!-- engine is considered "warm" -->
                           1500    25.0   <!-- engine oil is tough, engine does not develop full power -->
                        </tableData>
                    </table>
                </product>
            </function>
        </fcs_function>
        
        <fcs_function name="systems/propulsion/oil-press-friction">
            <description>made up data for engine lubrication by oil pressure</description>
            <function>
                <product>
                    <property>/engines/engine/complex-engine-procedures</property>  <!-- only apply with complex-engine-procedures EQ 1 -->
                    <property>/engines/engine/allow-oil-management</property>       <!-- only apply with allow-oil-management EQ 1 -->
                    <table>
                        <independentVar>/engines/engine[0]/oil-pressure-psi-final</independentVar>
                        <tableData>
                            15.0  30.0  <!-- added friction due to failing lubrication -->
                            20.0   0.0  <!-- minimum "OK"-range -->
                        </tableData>
                    </table>
                </product>
            </function>
        </fcs_function>
        
        
        <!-- "Special source": if friction levels are too high for an extendet amount of time, friction should runaway
             and kill the engine. This applies to high CHT temps and loss of oil pressure (failing pump/low oil levels), etc. -->
        <kinematic name="systems/propulsion/friction-kill-engine-norm">
            <!-- kinematic applies friction slowly to get engine down with a nice effect -->
            <input>/engines/engine[0]/killed</input> <!-- various sources can kill engine -->
            <traverse>
                <setting>
                    <position>0</position>
                    <time>0</time>
                </setting>
                <setting>
                    <position>1</position>
                    <time>15</time> <!-- how long it takes to finally kill the engine -->
                </setting>
            </traverse>
            <output>systems/propulsion/friction-kill-engine-norm</output>
        </kinematic>

        <!-- add friction to kill engine -->
        <fcs_function name="systems/propulsion/friction-kill-engine">
            <function>
                <product>
                    <table>
                        <independentVar>systems/propulsion/friction-kill-engine-norm</independentVar>
                        <tableData>
                            0.0     0.0
                            1.0   250.0   <!-- applied friction to kill engine -->
                        </tableData>
                    </table>
                    <property>/engines/engine[0]/killed</property> <!-- reset immediately to zero friction if not critical anymore -->
                </product>
            </function>
        </fcs_function>
        
        <!-- When engine crashes, it really immediately halts -->
        <fcs_function name="systems/propulsion/friction-crashed-engine">
            <function>
                <product>
                    <property>/engines/engine[0]/crashed</property>
                    <value> 500 </value>
                </product>
            </function>
        </fcs_function>
        
        
        <!-- TODO: it is possible model existing stuff here, like fuel tanks contaminated and prop-strike; -->
        
        
        
        

        <!-- sum up all friction variables and output to jsbsim, affecting engine RPM and heat generation-->
        <summer name="systems/propulsion/friction-summer">
            <!--<bias> 0.5 </bias>-->
            <input> systems/propulsion/manual-friction </input>     <!-- we might have fun trough telnet/scripts... -->
            <input> systems/propulsion/oil-age-friction </input>
            <input> systems/propulsion/oil-temp-friction </input>
            <input> systems/propulsion/oil-viscosity-friction </input>
            <input> systems/propulsion/oil-press-friction </input>
            <input> systems/propulsion/expansion-friction </input>
            <input> systems/propulsion/friction-kill-engine </input>
            <input> systems/propulsion/friction-crashed-engine </input>
            <!-- TODO: <input> prop-strike </input> -->
            <!-- TODO: <input> fuel-contaminated </input> -->
            <output>propulsion/engine/friction-hp</output>
        </summer>

    </channel>
</system>
